<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml,application/x-www-form-urlencoded,text/plain</consumes>
        <consumes_customized>true</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>04b080e0dbf7d01067166ac2ca96194e</enforce_acl>
        <http_method>POST</http_method>
        <name>Register</name>
        <operation_script>function toXMLString(o, leaveBlanks) {&#13;
    var toXml = function(v, name, ind) {&#13;
        if (typeof(v) == "function")&#13;
            return "";&#13;
&#13;
        var xml = "";&#13;
        if (v instanceof Array) {&#13;
            for (var i = 0, n = v.length; i &lt; n; i++)&#13;
                xml += ind + toXml(v[i], name, ind + "\t") + "\n";&#13;
        } else if (typeof(v) == "object") {&#13;
            var hasChild = false;&#13;
            xml += ind + "&lt;" + name;&#13;
            for (var m in v) {&#13;
                if (m.charAt(0) == "@")&#13;
                    xml += " " + m.substr(1) + "=\"" + v[m].toString() + "\"";&#13;
                else&#13;
                    hasChild = true;&#13;
            }&#13;
            xml += hasChild ? "&gt;" : "/&gt;";&#13;
            if (hasChild) {&#13;
                for (var m in v) {&#13;
                    if (m == "#text")&#13;
                        xml += v[m];&#13;
                    else if (m == "#cdata")&#13;
                        xml += "&lt;![CDATA[" + v[m] + "]]&gt;";&#13;
                    else if (m.charAt(0) != "@")&#13;
                        xml += toXml(v[m], m, ind + "\t");&#13;
                }&#13;
                xml += (xml.charAt(xml.length - 1) == "\n" ? ind : "") + "&lt;/" + name + "&gt;";&#13;
            }&#13;
        } else {&#13;
            xml += ind + "&lt;" + name + "&gt;" + v.toString() + "&lt;/" + name + "&gt;";&#13;
        }&#13;
        return xml;&#13;
    };&#13;
&#13;
    xml = '&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;';&#13;
    for (var m in o)&#13;
        xml += toXml(o[m], m, "");&#13;
&#13;
    if (leaveBlanks)&#13;
        return xml;&#13;
&#13;
    return xml.replace(/\t|\n/g, "");&#13;
&#13;
}&#13;
(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {&#13;
    try {&#13;
		&#13;
		&#13;
        //var restAPIBody = new RESTPlainTextUtil().getTextBody(request);&#13;
&#13;
     //   gs.info('Request Body of API : ' + restAPIBody);&#13;
		&#13;
&#13;
        var queryParams = request.queryParams;&#13;
		&#13;
		gs.info('queryParams' + global.JSON.stringify(queryParams));&#13;
		var agentID = request.body.data.id.toString();&#13;
&#13;
        gs.info('Agent ID:' + agentID + ', Request Body of queryParams of Register: ' + global.JSON.stringify(request.body.data));&#13;
       &#13;
&#13;
        //         gs.info('TEST request.headers' + JSON.stringify(request.headers));&#13;
&#13;
        //         gs.info('TEST queryParams: ' + JSON.stringify(queryParams) + ',  request.url:' + request.url);&#13;
&#13;
&#13;
&#13;
        var asset = new GlideRecord('alm_hardware');&#13;
        asset.addEncodedQuery('serial_number=' + agentID.toString());&#13;
        asset.query();&#13;
        if (asset.next()) {&#13;
            // asset.install_status = 6;&#13;
          //  asset.substatus = "Ready for Erasure";&#13;
&#13;
&#13;
            var imitadAsset = new GlideRecord('x_inmis_im_itad_imitad_hardware');&#13;
            if (imitadAsset.get('hardware_assets', asset.getValue('sys_id'))) {&#13;
                imitadAsset.hardware_assets = asset.getValue('sys_id');&#13;
                imitadAsset.agent_id = agentID.toString();&#13;
                imitadAsset.company = asset.getValue('company');&#13;
                imitadAsset.update();&#13;
            } else {&#13;
                imitadAsset.initialize();&#13;
                imitadAsset.hardware_assets = asset.getValue('sys_id');&#13;
                imitadAsset.agent_id = agentID.toString();&#13;
                imitadAsset.company = asset.getValue('company');&#13;
                imitadAsset.insert();&#13;
            }&#13;
&#13;
            asset.update();&#13;
        } else {&#13;
            gs.info('Agent ID "' + agentID.toString() + '" is  not matching with any of Hardware assets');&#13;
        }&#13;
&#13;
        queryParams = {&#13;
            blancco: request.queryParams&#13;
        };&#13;
&#13;
		gs.info('Response to Blancco: ' + global.JSON.stringify(queryParams));&#13;
        response.setContentType('application/xml');&#13;
        var writer = response.getStreamWriter();&#13;
        writer.writeString(toXMLString(queryParams));&#13;
&#13;
    } catch (e) {&#13;
        var error = '&gt;&gt;&gt;Exception occured [Register API]: ' + e;&#13;
        gs.info('TEST' + error);&#13;
        response.setBody(error);&#13;
    }&#13;
})(request, response);</operation_script>
        <operation_uri>/api/x_inmis_im_itad/blancco_service/Register</operation_uri>
        <produces>application/json,application/xml,text/xml,application/x-www-form-urlencoded</produces>
        <produces_customized>true</produces_customized>
        <relative_path>/Register</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>Munimohan.Bathala@ness.com</sys_created_by>
        <sys_created_on>2020-10-08 06:16:51</sys_created_on>
        <sys_id>af7dbf50dbf7d01067166ac2ca961968</sys_id>
        <sys_mod_count>178</sys_mod_count>
        <sys_name>Register</sys_name>
        <sys_package display_value="Ingram Micro IT Asset Disposition" source="x_inmis_im_itad">df95bbf0dbc17f008a521fe968961950</sys_package>
        <sys_policy/>
        <sys_scope display_value="Ingram Micro IT Asset Disposition">df95bbf0dbc17f008a521fe968961950</sys_scope>
        <sys_update_name>sys_ws_operation_af7dbf50dbf7d01067166ac2ca961968</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-06-09 18:14:49</sys_updated_on>
        <web_service_definition display_value="Blancco Service">cbbcd3c4db3f901067166ac2ca96195c</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
