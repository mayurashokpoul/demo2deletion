<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>cmn_location</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>IngramMicro LocationCreateUpdate</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions>x_inmis_im_itad.imitad_admin</role_conditions>
        <script><![CDATA[try {
	gs.info('Location create/update started');
	var SourceID;
	var r = new sn_ws.RESTMessageV2('x_inmis_im_itad.IngramMirco Location create update', 'post');
	
	var imcust = new GlideRecord('x_inmis_im_itad_customer_registration');
	imcust.addQuery('company_name',gs.getProperty('instance_name'));
	imcust.query();
	
	if(imcust.next()){
		SourceID = imcust.source_id;
		var Encrypter = imcust.encrypted_password.getDecryptedValue();
		r.setStringParameterNoEscape('password',Encrypter);
		r.setStringParameterNoEscape('username', imcust.encrypted_username);
		
	}
	r.setStringParameterNoEscape('SourceID',SourceID);
	r.setStringParameterNoEscape('Facility',current.x_inmis_im_itad_facility.facilityid);
	r.setStringParameterNoEscape('Currency', current.x_inmis_im_itad_fcurrency.currencyid);
	r.setStringParameterNoEscape('billingAdd1',current.x_inmis_im_itad_address_1);
	r.setStringParameterNoEscape('locationCity',current.city);
	r.setStringParameterNoEscape('billingAdd3',current.x_inmis_im_itad_address_2);
	r.setStringParameterNoEscape('locationAdd3','');
	r.setStringParameterNoEscape('billingAdd2',current.x_inmis_im_itad_address_3);
	r.setStringParameterNoEscape('locationID',current.x_inmis_im_itad_im_locationid==""?"0":current.x_inmis_im_itad_im_locationid);
	r.setStringParameterNoEscape('billToName',current.x_inmis_im_itad_billing_name);
	r.setStringParameterNoEscape('locationAdd2', '');
	r.setStringParameterNoEscape('locationAdd1',current.street);
	r.setStringParameterNoEscape('locationDesc', current.name);
	r.setStringParameterNoEscape('IsCOIRequired',current.x_inmis_im_itad_coi_required);
	r.setStringParameterNoEscape('IsUnionLabourRequired',current.x_inmis_im_itad_unionlabour_required);
	r.setStringParameterNoEscape('IsDockAvailable',current.x_inmis_im_itad_dock_available);
	r.setStringParameterNoEscape('IsTimeLimitRequiredToLoadDock',current.x_inmis_im_itad_loading_timelimit);
	r.setStringParameterNoEscape('IsPalletJackAvailable',current.x_inmis_im_itad_palletjack_available);
	r.setStringParameterNoEscape('IsSchedulingRequired',current.x_inmis_im_itad_scheduling_required);
	r.setStringParameterNoEscape('CanHandcartsBeUtilizedFromBuildingEquipment',current.x_inmis_im_itad_handcards_required);
	r.setStringParameterNoEscape('IsLiftGateNeeded',current.x_inmis_im_itad_liftgate_required);	  r.setStringParameterNoEscape('IsFreightElevatorAvailable',current.x_inmis_im_itad_freight_elevator_available);
	r.setStringParameterNoEscape('IsPassengerElevatorAvailable',current.x_inmis_im_itad_passengerelevator_available);
	r.setStringParameterNoEscape('ForkliftAvailable',current.x_inmis_im_itad_forklift_available);
	r.setStringParameterNoEscape('IsLoadingbaydockhavingStandardHeight',current.x_inmis_im_itad_standard_height);
	r.setStringParameterNoEscape('Weight',current.x_inmis_im_itad_weight);
	r.setStringParameterNoEscape('PostalCode',current.x_inmis_im_itad_zip);
	r.setStringParameterNoEscape('EmailID',current.x_inmis_im_itad_email_id);
	
	r.setStringParameterNoEscape('IsPickupLocation',current.x_inmis_im_itad_pickup_location);
	r.setStringParameterNoEscape('IsBillingLocation',current.x_inmis_im_itad_billing_location);
	r.setStringParameterNoEscape('IsShippingLocation',current.x_inmis_im_itad_shipping_location);
	r.setStringParameterNoEscape('ZipPostalCode',current.zip);
	
	r.setStringParameterNoEscape('TimeZone',current.x_inmis_im_itad_time_zone.timezoneid);
	r.setStringParameterNoEscape('BillingCity',current.x_inmis_im_itad_city);
	r.setStringParameterNoEscape('BillingState',current.x_inmis_im_itad_billing_state.stateid);
	
	r.setStringParameterNoEscape('pickupcontact',current.x_inmis_im_itad_pickup_contact);
	r.setStringParameterNoEscape('primarycontact',current.x_inmis_im_itad_primary_contact);
	r.setStringParameterNoEscape('alternativecontact',current.x_inmis_im_itad_alternative_contact);
	r.setStringParameterNoEscape('CreateLocationbaseUrl',gs.getProperty('x_inmis_im_itad.CreateLocation'));
	
	gs.info('Location create/update request created successfully.');
	var response = r.execute();
	
	var responseBody = response.getBody();
	var httpStatus = response.getStatusCode();
	
	gs.info("responseBody : " +responseBody);
	
	var readResponse = JSON.parse(responseBody);
	
	gs.info("readResponse : " +readResponse);
	
	var imLocIDUpdate = new GlideRecord('cmn_location');
	imLocIDUpdate.addQuery('sys_id',current.sys_id);
	imLocIDUpdate.query();
	if(imLocIDUpdate.next()){
		imLocIDUpdate.setValue('x_inmis_im_itad_im_locationid',readResponse.LocationID);
		
		if(readResponse.FacilityInfo.Address2=="")
			{
			imLocIDUpdate.setValue('x_inmis_im_itad_im_facilityaddress',readResponse.FacilityInfo.Address1 +""+readResponse.FacilityInfo.Address2 +" "+readResponse.FacilityInfo.Address3+"\r\n"+readResponse.FacilityInfo.City+"\r\n"+readResponse.FacilityInfo.StateDesc+" "+readResponse.FacilityInfo.ZipCode+" \r\n"+readResponse.FacilityInfo.CountryName);
			
			
		} else {		imLocIDUpdate.setValue('x_inmis_im_itad_im_facilityaddress',readResponse.FacilityInfo.Address1 +"\r\n"+readResponse.FacilityInfo.Address2 +" "+readResponse.FacilityInfo.Address3+"\r\n "+readResponse.FacilityInfo.City+"\r\n"+readResponse.FacilityInfo.StateDesc+" "+readResponse.FacilityInfo.ZipCode+" \r\n"+readResponse.FacilityInfo.CountryName);
		}
		imLocIDUpdate.update();
	}
	gs.info('Location create/update completed.');
}
catch(ex) {
	var message = ex.message;
	gs.error(message);
}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-04-25 10:48:30</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e18e4dd1db0d3f0067166ac2ca96193f</sys_id>
        <sys_mod_count>89</sys_mod_count>
        <sys_name>IngramMicro LocationCreateUpdate</sys_name>
        <sys_overrides/>
        <sys_package display_value="Ingram Micro IT Asset Disposition" source="x_inmis_im_itad">df95bbf0dbc17f008a521fe968961950</sys_package>
        <sys_policy/>
        <sys_scope display_value="Ingram Micro IT Asset Disposition">df95bbf0dbc17f008a521fe968961950</sys_scope>
        <sys_update_name>sys_script_e18e4dd1db0d3f0067166ac2ca96193f</sys_update_name>
        <sys_updated_by>INVOLR00</sys_updated_by>
        <sys_updated_on>2020-08-04 06:33:17</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=e18e4dd1db0d3f0067166ac2ca96193f"/>
</record_update>
